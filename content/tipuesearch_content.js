var tipuesearch = {"pages": [{'title': 'About', 'text': 'cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n 40823116倉儲 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'cp2022', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n', 'tags': '', 'url': 'cp2022.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'Weeks', 'text': '', 'tags': '', 'url': 'Weeks.html'}, {'title': 'w5', 'text': '', 'tags': '', 'url': 'w5.html'}, {'title': 'SSH', 'text': '確認star.bat啟動已經設定GIT_SSH變數，且與plink.exe連結 \n \n 找到plink設定才有用，putty進行設定，puttygen建立鑰匙 \n \n 打開 puttygen按下generate產生鑰匙，並複製鑰匙 \n \n 接著打開github，在帳號Settings下的SSH and GPG keys選擇new SSH key，貼在上面後點選Add SSH key，然後給它一個名稱 \n \n 接著將key儲存到隨身碟的資料夾裡後就可以進入設定putty的部分 \n \n 1連接到github.com並將埠號設為SSH的22，選擇SSH，並將session名稱設為學號 \n 2看看是否在學校，在學校記得設置proxy \n 3在SSH下設置private key \n \n 設定好後按下open，跑到這樣就是設定成功了 \n \n 接著使用SSH的方式將倉儲clone下來隨身系統裡 \n 使用 git clone --recurse-submodules git@your_github_session:mdecp2022/site-your_github_account.git 在 site-your_github_account 目錄中取下個人倉儲資料，cd至個人倉儲目錄，輸入cms執行動態網站 \n \n \n 進入 \n 輸入密碼後就可以進入到動態網頁進行編輯 \n \n 在Config裡面可可以更改title \n \n 更新完網站後按下下方的save後按下generate_pages轉成靜態，在倉儲根目錄中執行 acp "提交說明字串" 後, 即可憑藉 SSH 的設定, 將改版內容提交推送到 Github 個人倉儲區。 \n 使用 靜態網頁中 Brython所在的位置連結 加上?src=再加上 GITs編寫的程式產生的連結 ，就會的在靜態網頁的位置上 顯示出所編輯得程式 \n \n \n', 'tags': '', 'url': 'SSH.html'}, {'title': 'W6', 'text': '', 'tags': '', 'url': 'W6.html'}, {'title': '作業', 'text': '隨機抽點程式 \n from browser import document, html\n# 使用 import 導入 random 模組, 隨後就可以直接引用 random 模組的方法\nimport random\nbrython_div1 = document["brython_div1"]\n# Python 的註解分為單行註解與多行, 單行註解可在字串前方放入 #\n"""\nbrython_div1 <= html.BUTTON("hello")\nbrython_div1 <= html.BR()\nbrython_div1 <= html.A("google", href="https://google.com")\n"""\n\n# 宣告 url 變數值為字串, 此字串為取得 cp2022 1a 選課成員名單\nurl = "https://mde.tw/studlist/2022fall/1a.txt"\n# 利用上述已經宣告的 url 變數字串值, 作為 open() 函式的輸入變數, 可以連結至該網站\n# 連接 url 所代表字串的網站後, 再利用 read() 函式讀取該網站的內容, 即可取得 cp2022 1a 的選課成員學號\n# 由於所取回的學號以跳行符號隔開, 因此取回的學號資料行, 再利用 split() 函式, 以 \\n 跳行符號分割後\n# 所對應到 data 的資料型別將會是數列\ndata = open(url).read().split("\\n")\n# 宣告 mdecp2022 變數值為字串, 此字串為方便之後撰寫\nmdecp2022 = "https://mdecp2022.github.io/site-"\n# 宣告 data 為 data 的第二項到倒數第二項\ndata = data[1:-1]\n\n# 使用 random 模組裡的 shuffle 將data裡的元素打亂\nrandom.shuffle(data)\n# 使用重複迴圈在 data 裡取前五個(0,1,2,3,4)\nfor i in data[:5]:\n    # 宣告 stud 變數為切割掉空格的i\n    stud = i.split("\\t")\n    # 宣告 stud_num 為 stud 的第一項\n    stud_num = stud[0]\n    # 宣告 github_acc 為 stud 的第二項\n    github_acc = stud[1]\n    #print(stud_num, github_acc)\n    # 如果 github_acc 沒有取到\n    if github_acc == "":\n        # github_acc 就會是 stud_num\n        github_acc = stud_num\n    # site (網站)= mdecp2022 變數 + github_acc 變數\n    site = mdecp2022 + github_acc\n    link = html.A(stud_num, href=site)\n    brython_div1 <= link\n    brython_div1 <= html.BR() \n \n', 'tags': '', 'url': '作業.html'}, {'title': 'W8-W9', 'text': '期中考試週 \n \n', 'tags': '', 'url': 'W8-W9.html'}, {'title': 'W10', 'text': '網路設定題目檢討 \n network_setting \n 一、 \n IPV6好處:使用IPV4的人眾多跑的速度非常慢，用IPV6的人數相對少非常多，所以採用IPV6比較快速穩定 \n IPV6壞處:有一些網站不提供IPV6的服務，使用上要留意一下 \n proxy是一道橋梁使用代理主機聯連接不支援IPV6的網站 \n 每個網路協定都有不同的代理主機設定 \n 題目 \n F Chorme,Edge與Firefox等三種瀏覽器都必須利用Windows( Chorme和Firefox有其他選擇 ) \n F 在Windows 10 命令提示字元視窗中輸入 Ipconfig /all,表示電腦要自動設定網路連線(必須執行批次檔設定檔案才是) \n F 電腦輔助設計教室網路直接連外，且選用IPV6網路協定自動擷取IP，可以不用設定DNS伺服器，就能利用符號名稱連接外部網路(學校沒有自動DNS設定，所以要自己設) \n F\xa0 電腦輔助設計教室網路直接連外，且選用IPV6網路協定自動擷取IP，所取得的網路位址其前面四個區段將會是:2002:288:6004:17(2001:288:6004:17) \n 二、 \n 課程是由 Github Classroom 建的，Classroom 事由Ruby撰寫的 \n 題目 \n F  www.nfu.edu.te \xa0網站中的所有網路連結，已經全面支援 IPV6 網路協定(不是所有都有支援) \n 三、 \n 使用 GEU AFFERO GENERAL PULIC LICENSE 是不從中營利，也不要亂更改內容，但如果修改成功後就必須回饋給開發者，在碩士階段多採用這個方式 \n 題目 \n F [url]https://mde.tw/blog/pages/about/index.html[url] 可以找到課程  https://mde.tw \xa0網站的倉儲名稱為 github.com(倉儲名稱為mdecycu.github.io) \n 四、 \n 題目 \n F\xa0 www.nfu.edu.te \xa0並不支援IPV6網際協定連線(支援) \n F 每一位學員都必須建立的倉儲服務，位於gitlab.com(github.com) \n \n Brython \n 下列程式只要加上":"和某一航的一個字母，就可以列印從 1 到 10 的結果 \n init_val = 0\n#是rang"e"，for迴圈還沒講完後面要有:\nfor i in range(11):\n    init_val += i\nprint(init_val) \n \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W13', 'text': '攝氏溫度\xa0 c = (f-32)*5/9 \n 華氏溫度\xa0 f =c*9/5+32 \n w13_temp_ex2 \n \n', 'tags': '', 'url': 'W13.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'w15', 'text': '\n 1 為何學習計算機程式需要建立個人倉儲? \n A 可以看每次改版更新的進度 \n 2 全球資訊網能夠提供甚麼功能或有什麼優點? \n 3 Replit, stud.cycu.org 與 localhost 分別代表甚麼? \n A\xa0stud.cycu.org 是一台 Ubuntu 伺服器 \n 4 https, ssh 到底提供使用者那些功能或優點? \n A\xa0 https 連線協定是在利用超文件傳輸的過程中, 將傳送的資料加以加密編碼後, 直到接收後再解開； SSH \xa0 連線協定在 Windows 操作系統,，可以透過 \xa0Putty \xa0 session 設定達成 \n 5 Brython 與 Python 有甚麼差別? \n 6 能夠直接在瀏覽器中以 Brython 繪製中華民國國旗, 或模擬綠色方塊在方塊格點中任意移動, 代表甚麼? \n 7 變數, 字串, 整數, 浮點數, 數列, Tuple, Dictionary, 函式, 重複迴圈, class, 物件導向, 資料庫, 這些名詞對您而言代表甚麼? \n \n \n  editor2 結束 ', 'tags': '', 'url': 'w15.html'}]};